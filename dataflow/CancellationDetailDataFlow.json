{
	"name": "CancellationDetailDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CancellationDetailsFile",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "CancellationDetailsSQL",
						"type": "DatasetReference"
					},
					"name": "CancellationDetailsSink"
				}
			],
			"transformations": [
				{
					"name": "SourceCancellationDetails"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Sale Odometer} as string,",
				"          {Sale Date} as string,",
				"          {Contract Status} as string,",
				"          {Contract #} as string,",
				"          {Cancellation Miles} as string,",
				"          {Cancellation Fee} as string,",
				"          {Cancellation Effective Date} as string,",
				"          {Cancel Report Date} as string,",
				"          {Cancel Reason} as string,",
				"          {Cancel Method} as string,",
				"          {Cancel Factor %} as string,",
				"          {Cancel Bill Date} as string,",
				"          {Cancel Amount (w/out Tax)} as string,",
				"          {Cancel Amount} as string",
				"     ),",
				"     allowSchemaDrift: false,",
				"     validateSchema: false,",
				"     limit: 20,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(each(match(locate(\"Amount\",name)>0), $$ = toDecimal($$,18,2)),",
				"          each(match(locate(\"Fee\",name)>0), $$ = toDecimal($$,18,2)),",
				"          each(match(locate(\"Tax\",name)>0), $$ = toDecimal($$,18,2)),",
				"          each(match(locate(\"Cost\",name)>0), $$ = toDecimal($$,18,2)),",
				"          each(match(locate(\"Date\",name)>0), $$ = toDate($$, \"YYYY-MM-DD\"))) ~> SourceCancellationDetails",
				"SourceCancellationDetails sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          each(match(/* All input columns */true()),",
				"               /* Input name */$$ = $$)",
				"     )) ~> CancellationDetailsSink"
			]
		}
	}
}